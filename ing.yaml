apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/custom-http-errors: "404"
    nginx.ingress.kubernetes.io/default-backend: custom-error-page
  labels:
    app: default-http-backend
  name: default-http-backend
spec:
  rules:
    - host:
      http:
        paths:
          - path: "/"
            backend:
              serviceName: default-http-backend
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  labels:
    app: default-http-backend
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: default-http-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-http-backend
  labels:
    app: default-http-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: default-http-backend
  template:
    metadata:
      labels:
        app: default-http-backend
    spec:
      containers:
        - name: default-http-backend
          image: nginx
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: custom-error-page
  labels:
    app: custom-error-page
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: custom-error-page
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-error-page
  labels:
    app: custom-error-page
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-error-page
  template:
    metadata:
      labels:
        app: custom-error-page
    spec:
      containers:
        - name: custom-error-page
          image: brndnmtthws/nginx-echo-headers
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
